# Python stubs generated by omniidl from IEV_INJ.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "IBASE.idl"
import IBASE_idl
_0_IBASE = omniORB.openModule("IBASE")
_0_IBASE__POA = omniORB.openModule("IBASE__POA")

# #include "ITM.idl"
import ITM_idl
_0_ITM = omniORB.openModule("ITM")
_0_ITM__POA = omniORB.openModule("ITM__POA")

# #include "IEV.idl"
import IEV_idl
_0_IEV = omniORB.openModule("IEV")
_0_IEV__POA = omniORB.openModule("IEV__POA")

#
# Start of module "IEV_INJ"
#
__name__ = "IEV_INJ"
_0_IEV_INJ = omniORB.openModule("IEV_INJ", r"IEV_INJ.idl")
_0_IEV_INJ__POA = omniORB.openModule("IEV_INJ__POA", r"IEV_INJ.idl")


# interface EventInjectMngr
_0_IEV_INJ._d_EventInjectMngr = (omniORB.tcInternal.tv_objref, "IDL:IEV_INJ/EventInjectMngr:1.0", "EventInjectMngr")
omniORB.typeMapping["IDL:IEV_INJ/EventInjectMngr:1.0"] = _0_IEV_INJ._d_EventInjectMngr
_0_IEV_INJ.EventInjectMngr = omniORB.newEmptyClass()
class EventInjectMngr :
    _NP_RepositoryId = _0_IEV_INJ._d_EventInjectMngr[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil

    ServiceName = "EV_INJ_001"
    
    # exception BadEvent
    _0_IEV_INJ.EventInjectMngr.BadEvent = omniORB.newEmptyClass()
    class BadEvent (CORBA.UserException):
        _NP_RepositoryId = "IDL:IEV_INJ/EventInjectMngr/BadEvent:1.0"

        _NP_ClassName = "IEV_INJ.EventInjectMngr.BadEvent"

        def __init__(self):
            CORBA.UserException.__init__(self)
    
    _d_BadEvent  = (omniORB.tcInternal.tv_except, BadEvent, BadEvent._NP_RepositoryId, "BadEvent")
    _tc_BadEvent = omniORB.tcInternal.createTypeCode(_d_BadEvent)
    omniORB.registerType(BadEvent._NP_RepositoryId, _d_BadEvent, _tc_BadEvent)


_0_IEV_INJ.EventInjectMngr = EventInjectMngr
_0_IEV_INJ._tc_EventInjectMngr = omniORB.tcInternal.createTypeCode(_0_IEV_INJ._d_EventInjectMngr)
omniORB.registerType(EventInjectMngr._NP_RepositoryId, _0_IEV_INJ._d_EventInjectMngr, _0_IEV_INJ._tc_EventInjectMngr)

# EventInjectMngr operations and attributes
EventInjectMngr._d_injectEvent = ((omniORB.typeMapping["IDL:IEV/Event:1.0"], ), (), {_0_IBASE.NotFound._NP_RepositoryId: _0_IBASE._d_NotFound, _0_IEV_INJ.EventInjectMngr.BadEvent._NP_RepositoryId: _0_IEV_INJ.EventInjectMngr._d_BadEvent})
EventInjectMngr._d_getDefaultDataStream = ((), (omniORB.tcInternal.tv_long, ), None)
EventInjectMngr._d_getDefaultSpacecraftID = ((), ((omniORB.tcInternal.tv_string,0), ), None)

# EventInjectMngr object reference
class _objref_EventInjectMngr (CORBA.Object):
    _NP_RepositoryId = EventInjectMngr._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def injectEvent(self, *args):
        return self._obj.invoke("injectEvent", _0_IEV_INJ.EventInjectMngr._d_injectEvent, args)

    def getDefaultDataStream(self, *args):
        return self._obj.invoke("getDefaultDataStream", _0_IEV_INJ.EventInjectMngr._d_getDefaultDataStream, args)

    def getDefaultSpacecraftID(self, *args):
        return self._obj.invoke("getDefaultSpacecraftID", _0_IEV_INJ.EventInjectMngr._d_getDefaultSpacecraftID, args)

omniORB.registerObjref(EventInjectMngr._NP_RepositoryId, _objref_EventInjectMngr)
_0_IEV_INJ._objref_EventInjectMngr = _objref_EventInjectMngr
del EventInjectMngr, _objref_EventInjectMngr

# EventInjectMngr skeleton
__name__ = "IEV_INJ__POA"
class EventInjectMngr (PortableServer.Servant):
    _NP_RepositoryId = _0_IEV_INJ.EventInjectMngr._NP_RepositoryId


    _omni_op_d = {"injectEvent": _0_IEV_INJ.EventInjectMngr._d_injectEvent, "getDefaultDataStream": _0_IEV_INJ.EventInjectMngr._d_getDefaultDataStream, "getDefaultSpacecraftID": _0_IEV_INJ.EventInjectMngr._d_getDefaultSpacecraftID}

EventInjectMngr._omni_skeleton = EventInjectMngr
_0_IEV_INJ__POA.EventInjectMngr = EventInjectMngr
omniORB.registerSkeleton(EventInjectMngr._NP_RepositoryId, EventInjectMngr)
del EventInjectMngr
__name__ = "IEV_INJ"

#
# End of module "IEV_INJ"
#
__name__ = "IEV_INJ_idl"

_exported_modules = ( "IEV_INJ", )

# The end.
