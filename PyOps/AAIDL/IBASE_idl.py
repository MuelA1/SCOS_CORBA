# Python stubs generated by omniidl from IBASE.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "IBASE"
#
__name__ = "IBASE"
_0_IBASE = omniORB.openModule("IBASE", r"IBASE.idl")
_0_IBASE__POA = omniORB.openModule("IBASE__POA", r"IBASE.idl")


# typedef ... Longs
class Longs:
    _NP_RepositoryId = "IDL:IBASE/Longs:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IBASE.Longs = Longs
_0_IBASE._d_Longs  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_long, 0)
_0_IBASE._ad_Longs = (omniORB.tcInternal.tv_alias, Longs._NP_RepositoryId, "Longs", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_long, 0))
_0_IBASE._tc_Longs = omniORB.tcInternal.createTypeCode(_0_IBASE._ad_Longs)
omniORB.registerType(Longs._NP_RepositoryId, _0_IBASE._ad_Longs, _0_IBASE._tc_Longs)
del Longs

# struct Time
_0_IBASE.Time = omniORB.newEmptyClass()
class Time (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IBASE/Time:1.0"

    def __init__(self, m_sec, m_micro, m_isDelta):
        self.m_sec = m_sec
        self.m_micro = m_micro
        self.m_isDelta = m_isDelta

_0_IBASE.Time = Time
_0_IBASE._d_Time  = (omniORB.tcInternal.tv_struct, Time, Time._NP_RepositoryId, "Time", "m_sec", omniORB.tcInternal.tv_long, "m_micro", omniORB.tcInternal.tv_long, "m_isDelta", omniORB.tcInternal.tv_boolean)
_0_IBASE._tc_Time = omniORB.tcInternal.createTypeCode(_0_IBASE._d_Time)
omniORB.registerType(Time._NP_RepositoryId, _0_IBASE._d_Time, _0_IBASE._tc_Time)
del Time

# typedef ... ByteString
class ByteString:
    _NP_RepositoryId = "IDL:IBASE/ByteString:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IBASE.ByteString = ByteString
_0_IBASE._d_ByteString  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0)
_0_IBASE._ad_ByteString = (omniORB.tcInternal.tv_alias, ByteString._NP_RepositoryId, "ByteString", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0))
_0_IBASE._tc_ByteString = omniORB.tcInternal.createTypeCode(_0_IBASE._ad_ByteString)
omniORB.registerType(ByteString._NP_RepositoryId, _0_IBASE._ad_ByteString, _0_IBASE._tc_ByteString)
del ByteString

# typedef ... VariantState
class VariantState:
    _NP_RepositoryId = "IDL:IBASE/VariantState:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IBASE.VariantState = VariantState
_0_IBASE._d_VariantState  = omniORB.tcInternal.tv_char
_0_IBASE._ad_VariantState = (omniORB.tcInternal.tv_alias, VariantState._NP_RepositoryId, "VariantState", omniORB.tcInternal.tv_char)
_0_IBASE._tc_VariantState = omniORB.tcInternal.createTypeCode(_0_IBASE._ad_VariantState)
omniORB.registerType(VariantState._NP_RepositoryId, _0_IBASE._ad_VariantState, _0_IBASE._tc_VariantState)
del VariantState
_0_IBASE.IS_NULL = "0"
_0_IBASE.IS_SHORT = "i"
_0_IBASE.IS_LONG = "I"
_0_IBASE.IS_USHORT = "u"
_0_IBASE.IS_ULONG = "U"
_0_IBASE.IS_FLOAT = "F"
_0_IBASE.IS_DOUBLE = "D"
_0_IBASE.IS_CHAR = "C"
_0_IBASE.IS_BOOLEAN = "B"
_0_IBASE.IS_OCTET = "O"
_0_IBASE.IS_STRING = "S"
_0_IBASE.IS_BSTRING = "s"
_0_IBASE.IS_TIME = "T"

# union Variant
_0_IBASE.Variant = omniORB.newEmptyClass()
class Variant (omniORB.Union):
    _NP_RepositoryId = "IDL:IBASE/Variant:1.0"

_0_IBASE.Variant = Variant

Variant._m_to_d = {"m_nullFormat": "0", "m_shortFormat": "i", "m_longFormat": "I", "m_ushortFormat": "u", "m_ulongFormat": "U", "m_floatFormat": "F", "m_doubleFormat": "D", "m_charFormat": "C", "m_booleanFormat": "B", "m_octetFormat": "O", "m_stringFormat": "S", "m_bstringFormat": "s", "m_timeFormat": "T"}
Variant._d_to_m = {"0": "m_nullFormat", "i": "m_shortFormat", "I": "m_longFormat", "u": "m_ushortFormat", "U": "m_ulongFormat", "F": "m_floatFormat", "D": "m_doubleFormat", "C": "m_charFormat", "B": "m_booleanFormat", "O": "m_octetFormat", "S": "m_stringFormat", "s": "m_bstringFormat", "T": "m_timeFormat"}
Variant._def_m  = None
Variant._def_d  = None

_0_IBASE._m_Variant  = (("0", "m_nullFormat", omniORB.tcInternal.tv_boolean), ("i", "m_shortFormat", omniORB.tcInternal.tv_short), ("I", "m_longFormat", omniORB.tcInternal.tv_long), ("u", "m_ushortFormat", omniORB.tcInternal.tv_ushort), ("U", "m_ulongFormat", omniORB.tcInternal.tv_ulong), ("F", "m_floatFormat", omniORB.tcInternal.tv_float), ("D", "m_doubleFormat", omniORB.tcInternal.tv_double), ("C", "m_charFormat", omniORB.tcInternal.tv_char), ("B", "m_booleanFormat", omniORB.tcInternal.tv_boolean), ("O", "m_octetFormat", omniORB.tcInternal.tv_octet), ("S", "m_stringFormat", (omniORB.tcInternal.tv_string,0)), ("s", "m_bstringFormat", omniORB.typeMapping["IDL:IBASE/ByteString:1.0"]), ("T", "m_timeFormat", omniORB.typeMapping["IDL:IBASE/Time:1.0"]),)
_0_IBASE._d_Variant  = (omniORB.tcInternal.tv_union, Variant, Variant._NP_RepositoryId, "Variant", omniORB.typeMapping["IDL:IBASE/VariantState:1.0"], -1, _0_IBASE._m_Variant, None, {"0": _0_IBASE._m_Variant[0], "i": _0_IBASE._m_Variant[1], "I": _0_IBASE._m_Variant[2], "u": _0_IBASE._m_Variant[3], "U": _0_IBASE._m_Variant[4], "F": _0_IBASE._m_Variant[5], "D": _0_IBASE._m_Variant[6], "C": _0_IBASE._m_Variant[7], "B": _0_IBASE._m_Variant[8], "O": _0_IBASE._m_Variant[9], "S": _0_IBASE._m_Variant[10], "s": _0_IBASE._m_Variant[11], "T": _0_IBASE._m_Variant[12]})
_0_IBASE._tc_Variant = omniORB.tcInternal.createTypeCode(_0_IBASE._d_Variant)
omniORB.registerType(Variant._NP_RepositoryId, _0_IBASE._d_Variant, _0_IBASE._tc_Variant)
del Variant

# typedef ... Radix
class Radix:
    _NP_RepositoryId = "IDL:IBASE/Radix:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IBASE.Radix = Radix
_0_IBASE._d_Radix  = omniORB.tcInternal.tv_char
_0_IBASE._ad_Radix = (omniORB.tcInternal.tv_alias, Radix._NP_RepositoryId, "Radix", omniORB.tcInternal.tv_char)
_0_IBASE._tc_Radix = omniORB.tcInternal.createTypeCode(_0_IBASE._ad_Radix)
omniORB.registerType(Radix._NP_RepositoryId, _0_IBASE._ad_Radix, _0_IBASE._tc_Radix)
del Radix
_0_IBASE.BINARY = "B"
_0_IBASE.OCTAL = "O"
_0_IBASE.DECIMAL = "D"
_0_IBASE.HEXADECIMAL = "H"

# typedef ... Color
class Color:
    _NP_RepositoryId = "IDL:IBASE/Color:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IBASE.Color = Color
_0_IBASE._d_Color  = omniORB.tcInternal.tv_char
_0_IBASE._ad_Color = (omniORB.tcInternal.tv_alias, Color._NP_RepositoryId, "Color", omniORB.tcInternal.tv_char)
_0_IBASE._tc_Color = omniORB.tcInternal.createTypeCode(_0_IBASE._ad_Color)
omniORB.registerType(Color._NP_RepositoryId, _0_IBASE._ad_Color, _0_IBASE._tc_Color)
del Color
_0_IBASE.WHITE = "0"
_0_IBASE.BLACK = "1"
_0_IBASE.GREEN = "2"
_0_IBASE.BLUE = "3"
_0_IBASE.CYAN = "4"
_0_IBASE.ORANGE = "5"
_0_IBASE.BROWN = "6"
_0_IBASE.MAGENTA = "7"
_0_IBASE.RED = "8"
_0_IBASE.YELLOW = "9"

# typedef ... Strings
class Strings:
    _NP_RepositoryId = "IDL:IBASE/Strings:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IBASE.Strings = Strings
_0_IBASE._d_Strings  = (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0)
_0_IBASE._ad_Strings = (omniORB.tcInternal.tv_alias, Strings._NP_RepositoryId, "Strings", (omniORB.tcInternal.tv_sequence, (omniORB.tcInternal.tv_string,0), 0))
_0_IBASE._tc_Strings = omniORB.tcInternal.createTypeCode(_0_IBASE._ad_Strings)
omniORB.registerType(Strings._NP_RepositoryId, _0_IBASE._ad_Strings, _0_IBASE._tc_Strings)
del Strings

# typedef ... StringTable
class StringTable:
    _NP_RepositoryId = "IDL:IBASE/StringTable:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IBASE.StringTable = StringTable
_0_IBASE._d_StringTable  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IBASE/Strings:1.0"], 0)
_0_IBASE._ad_StringTable = (omniORB.tcInternal.tv_alias, StringTable._NP_RepositoryId, "StringTable", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IBASE/Strings:1.0"], 0))
_0_IBASE._tc_StringTable = omniORB.tcInternal.createTypeCode(_0_IBASE._ad_StringTable)
omniORB.registerType(StringTable._NP_RepositoryId, _0_IBASE._ad_StringTable, _0_IBASE._tc_StringTable)
del StringTable

# typedef ... Variants
class Variants:
    _NP_RepositoryId = "IDL:IBASE/Variants:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_IBASE.Variants = Variants
_0_IBASE._d_Variants  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IBASE/Variant:1.0"], 0)
_0_IBASE._ad_Variants = (omniORB.tcInternal.tv_alias, Variants._NP_RepositoryId, "Variants", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:IBASE/Variant:1.0"], 0))
_0_IBASE._tc_Variants = omniORB.tcInternal.createTypeCode(_0_IBASE._ad_Variants)
omniORB.registerType(Variants._NP_RepositoryId, _0_IBASE._ad_Variants, _0_IBASE._tc_Variants)
del Variants

# exception NotFound
_0_IBASE.NotFound = omniORB.newEmptyClass()
class NotFound (CORBA.UserException):
    _NP_RepositoryId = "IDL:IBASE/NotFound:1.0"

    def __init__(self):
        CORBA.UserException.__init__(self)

_0_IBASE.NotFound = NotFound
_0_IBASE._d_NotFound  = (omniORB.tcInternal.tv_except, NotFound, NotFound._NP_RepositoryId, "NotFound")
_0_IBASE._tc_NotFound = omniORB.tcInternal.createTypeCode(_0_IBASE._d_NotFound)
omniORB.registerType(NotFound._NP_RepositoryId, _0_IBASE._d_NotFound, _0_IBASE._tc_NotFound)
del NotFound

# exception NotProcessed
_0_IBASE.NotProcessed = omniORB.newEmptyClass()
class NotProcessed (CORBA.UserException):
    _NP_RepositoryId = "IDL:IBASE/NotProcessed:1.0"

    def __init__(self, m_reason):
        CORBA.UserException.__init__(self, m_reason)
        self.m_reason = m_reason

_0_IBASE.NotProcessed = NotProcessed
_0_IBASE._d_NotProcessed  = (omniORB.tcInternal.tv_except, NotProcessed, NotProcessed._NP_RepositoryId, "NotProcessed", "m_reason", (omniORB.tcInternal.tv_string,0))
_0_IBASE._tc_NotProcessed = omniORB.tcInternal.createTypeCode(_0_IBASE._d_NotProcessed)
omniORB.registerType(NotProcessed._NP_RepositoryId, _0_IBASE._d_NotProcessed, _0_IBASE._tc_NotProcessed)
del NotProcessed

# struct CommonPktHeader
_0_IBASE.CommonPktHeader = omniORB.newEmptyClass()
class CommonPktHeader (omniORB.StructBase):
    _NP_RepositoryId = "IDL:IBASE/CommonPktHeader:1.0"

    def __init__(self, m_needed_byctree, m_AccessFlag, m_SimulationFlag, m_FilingTime, m_CreateTime, m_CreateId, m_SpacecraftId, m_ununsed0, m_Size, m_SIIhdrType, m_Version, m_unused1, m_StreamId, m_SeqCounter, m_FilingKey, m_RetrKey1, m_RetrKey2):
        self.m_needed_byctree = m_needed_byctree
        self.m_AccessFlag = m_AccessFlag
        self.m_SimulationFlag = m_SimulationFlag
        self.m_FilingTime = m_FilingTime
        self.m_CreateTime = m_CreateTime
        self.m_CreateId = m_CreateId
        self.m_SpacecraftId = m_SpacecraftId
        self.m_ununsed0 = m_ununsed0
        self.m_Size = m_Size
        self.m_SIIhdrType = m_SIIhdrType
        self.m_Version = m_Version
        self.m_unused1 = m_unused1
        self.m_StreamId = m_StreamId
        self.m_SeqCounter = m_SeqCounter
        self.m_FilingKey = m_FilingKey
        self.m_RetrKey1 = m_RetrKey1
        self.m_RetrKey2 = m_RetrKey2

_0_IBASE.CommonPktHeader = CommonPktHeader
_0_IBASE._d_CommonPktHeader  = (omniORB.tcInternal.tv_struct, CommonPktHeader, CommonPktHeader._NP_RepositoryId, "CommonPktHeader", "m_needed_byctree", omniORB.tcInternal.tv_ushort, "m_AccessFlag", omniORB.tcInternal.tv_octet, "m_SimulationFlag", omniORB.tcInternal.tv_octet, "m_FilingTime", omniORB.typeMapping["IDL:IBASE/Time:1.0"], "m_CreateTime", omniORB.typeMapping["IDL:IBASE/Time:1.0"], "m_CreateId", omniORB.tcInternal.tv_ulong, "m_SpacecraftId", omniORB.tcInternal.tv_ushort, "m_ununsed0", omniORB.tcInternal.tv_ushort, "m_Size", omniORB.tcInternal.tv_ulong, "m_SIIhdrType", omniORB.tcInternal.tv_octet, "m_Version", omniORB.tcInternal.tv_octet, "m_unused1", omniORB.tcInternal.tv_octet, "m_StreamId", omniORB.tcInternal.tv_ushort, "m_SeqCounter", omniORB.tcInternal.tv_ulong, "m_FilingKey", omniORB.tcInternal.tv_ulong, "m_RetrKey1", omniORB.tcInternal.tv_ushort, "m_RetrKey2", omniORB.tcInternal.tv_ushort)
_0_IBASE._tc_CommonPktHeader = omniORB.tcInternal.createTypeCode(_0_IBASE._d_CommonPktHeader)
omniORB.registerType(CommonPktHeader._NP_RepositoryId, _0_IBASE._d_CommonPktHeader, _0_IBASE._tc_CommonPktHeader)
del CommonPktHeader

#
# End of module "IBASE"
#
__name__ = "IBASE_idl"

_exported_modules = ( "IBASE", )

# The end.
